library(lubridate)
library(tidyverse)
library(googledrive)
library(magrittr)
library(cowplot)
library(rgee)
library(sf)
library(cowplot)
library(beepr)
library(stringi)

country_tasks = read.csv("country_tasks.csv")

#load in world map from geoboundaries
map <- read_sf("./maps/world.shp")

areas <- readRDS("dengue_temp_full.rds") %>%
      filter(country != "CHN") %>% 
      filter(country != "LKA") %>% 
      filter(year <= 2019) %>% 
      mutate(time = as.Date(paste(year, month, 1, sep="-"), "%Y-%m-%d"))%>%
      # some province names repeat between countries
      mutate(id_country = paste(id, country, sep="_")) #%>%
      # filter out rows where cases are NAS
#      filter(!is.na(dengue_cases))

# add column that indicates when each dataframe started
mean_stats <- areas %>% 
              group_by(id_country, year) %>%
           summarize(frq=n()) %>%
           left_join(areas) %>%
           filter(frq==12) %>%
           summarize(mean_cases = mean(dengue_cases, na.rm=TRUE),
                     mean_temp = mean(mean_2m_air_temperare_degree1, na.rm=TRUE)) %>%
  ungroup()

sf::sf_use_s2(FALSE)

shp <- st_read(dsn = "./all_maps", 
               layer = "all_maps")

st_crs(shp_simp)
shp_simp <- st_simplify(shp, dTolerance = 0.1)
shp <- st_set_crs(shp_simp, st_crs(map))

#for spanish countries change to english names
sp_country <- country_tasks$country[country_tasks$identifier_col=="ADM1_ES"|country_tasks$identifier_col=="ADM2_ES"]

all_maps <- shp %>%
          mutate(id = tolower(id)) %>%
          mutate(id = ifelse(grepl("br\\d", id), substr(id, 1, 8), id)) %>%
          mutate(id = ifelse(country %in% sp_country, stri_trans_general(id, id="Latin-ASCII"), id)) %>%
          mutate(id_country = paste(id, country,sep="_")) %>%
          merge(mean_stats, by = "id_country") # %>%

p1 <- ggplot() + 
  geom_sf(data = map, fill="gray", colour=NA) + 
  geom_sf(data = all_maps, aes(fill = mean_temp), colour=NA) +
  geom_sf(data=map, fill=NA, colour="black") +
  coord_sf(expand = FALSE) +
  scale_y_continuous(limits = c(-34, 33))+
  scale_x_continuous(limits=c(-119,-28))+
  scale_fill_gradient(low="yellow", high="red", limits=range(all_maps$mean_temp, na.rm=TRUE))+
  theme_void()+
  theme(legend.position="right")

p2 <- ggplot() + 
  geom_sf(data = map, fill="gray", colour=NA) + 
  geom_sf(data = all_maps, aes(fill = mean_temp), colour=NA) +
  geom_sf(data=map, fill=NA, colour="black") +
  coord_sf(expand = FALSE) +
  scale_y_continuous(limits = c(-10, 40))+
  scale_x_continuous(limits=c(75,143))+
  scale_fill_gradient(low="yellow", high="red", limits=range(all_maps$mean_temp, na.rm=TRUE))+
  theme_void()+
  theme(legend.position="none")

leg<-get_legend(p1)

p1<-p1+theme(legend.position="none")

p3 <- ggplot() +
  geom_sf(data = map, fill="gray", colour=NA) +
  geom_sf(data = all_maps, aes(fill = log(mean_cases+1)), colour=NA) +
  geom_sf(data=map, fill=NA, colour="black") +
  coord_sf(expand = FALSE) +
  scale_y_continuous(limits = c(-34, 33))+
  scale_x_continuous(limits=c(-119,-28))+
  scale_fill_gradient(low="blue", high="red", limits=range(log(all_maps$mean_cases+1), na.rm=TRUE))+
  theme_void()+
  theme(legend.position="right")

p4 <- ggplot() +
  geom_sf(data = map, fill="gray", colour=NA) +
  geom_sf(data = all_maps, aes(fill = log(mean_cases+1)), colour=NA) +
  geom_sf(data=map, fill=NA, colour="black") +
  coord_sf(expand = FALSE) +
  scale_y_continuous(limits = c(-10, 40))+
  scale_x_continuous(limits=c(75,143))+
  scale_fill_gradient(low="blue", high="red", limits=range(log(all_maps$mean_cases+1), na.rm=TRUE))+
  theme_void()+
  theme(legend.position="none")

leg2 <- get_legend(p3)

p3 <- p3+theme(legend.position="none")

# Combine the plots with a legend

combined_plot <- plot_grid(p1, p2,leg,
                           p3, p4,leg2,
                           ncol=3, rel_widths=c(1,1,.2)) 

# Save the combined plot as a PNG file
ggsave(filename = "map_temp_both2.png", plot = combined_plot, width = 10, height = 12)
